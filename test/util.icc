{
    # sum with usage of the function stack #
    sum = ()$ -> {
        if $0 > 0: {
            x = 0;
            for i in [1,$0]: x += $i.
         }.
    };
    # nice unicode syntax #
    ∑ = ()$ -> {
        ? $0 > 0: {
        x = 0;
            ∀ i ∈ [1,$0]: x += $i.
        }.
    };
    # recursive multiplication #
    mul = a,b ->
        if a > 0:
            b += mul(a--, b)
        else a.;
    # recursive factorial #
    fact = n ->
        if n <= 1:
            1
        else fact(n--) * n.;
    # map higher order #
    map = (f)$ -> {
        arr = ();
        for i in ]0,$0]:
                arr += (f($i),).;
        arr
    };
    # or even better #
    🗺️ = ƒ$ -> {
         = ();
        ∀ ι ∈ ]0,$0]:
             += (f($ι),).;
        
    }
}
